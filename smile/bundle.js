(function (React$1, ReactDOM, d3) {
  "use strict";

  React$1 =
    React$1 && Object.prototype.hasOwnProperty.call(React$1, "default")
      ? React$1["default"]
      : React$1;
  ReactDOM =
    ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, "default")
      ? ReactDOM["default"]
      : ReactDOM;

  const BackgroundCircle = ({ radius, strokeWidth }) =>
    React$1.createElement("circle", {
      r: radius,
      fill: "blue",
      stroke: "black",
      "stroke-width": strokeWidth,
    });

  const Eyes = ({ eyeOffsetX, eyeOffsetY, eyeRadius }) =>
    React$1.createElement(
      React$1.Fragment,
      null,
      React$1.createElement("circle", {
        cx: -eyeOffsetX,
        cy: -eyeOffsetY,
        r: eyeRadius,
      }),
      React$1.createElement("circle", {
        cx: eyeOffsetX,
        cy: -eyeOffsetY,
        r: eyeRadius,
      })
    );

  const Mouth = ({ mouthRadius, mouthWidth }) => {
    const mouthArc = d3
      .arc()
      .innerRadius(mouthRadius)
      .outerRadius(mouthRadius + mouthWidth)
      .startAngle(Math.PI / 2)
      .endAngle((Math.PI * 3) / 2);

    return React$1.createElement("path", { d: mouthArc() });
  };

  const FaceContainer = ({ children, width, height, centerX, centerY }) =>
    React.createElement(
      "svg",
      { width: width, height: height },
      React.createElement(
        "g",
        { transform: `translate(${centerX},${centerY})` },
        children
      )
    );

  const Face = ({
    width,
    height,
    centerX,
    centerY,
    radius,
    strokeWidth,
    eyeOffsetX,
    eyeOffsetY,
    eyeRadius,
    mouthRadius,
    mouthWidth,
  }) =>
    React.createElement(
      FaceContainer,
      {
        width: width,
        height: height,
        centerX: centerX,
        centerY: centerY,
      },

      React.createElement(BackgroundCircle, {
        radius: centerY - strokeWidth / 2,
        strokeWidth: strokeWidth,
      }),
      React.createElement(Eyes, {
        eyeOffsetX: eyeOffsetX,
        eyeOffsetY: eyeOffsetY,
        eyeRadius: eyeRadius,
      }),
      React.createElement(Mouth, {
        mouthRadius: mouthRadius,
        mouthWidth: mouthWidth,
      })
    );

  const width = 160;
  const height = 160;

  const array = d3.range(6 * 3);

  const App = () =>
    array.map(() =>
      React$1.createElement(Face, {
        width: width,
        height: height,
        centerX: width / 2,
        centerY: height / 2,
        strokeWidth: 6 + Math.random() * 3,
        eyeOffsetX: 20 + Math.random() * 9,
        eyeOffsetY: 20 + Math.random() * 15,
        eyeRadius: 5 + Math.random() * 10,
        mouthWidth: 7 + Math.random() * 9,
        mouthRadius: 30 + Math.random() * 10,
      })
    );

  const rootElement = document.getElementById("root");
  ReactDOM.render(React$1.createElement(App, null), rootElement);
})(React, ReactDOM, d3);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIkJhY2tncm91bmRDaXJjbGUuanMiLCJFeWVzLmpzIiwiTW91dGguanMiLCJGYWNlQ29udGFpbmVyLmpzIiwiRmFjZS5qcyIsImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBjb25zdCBCYWNrZ3JvdW5kQ2lyY2xlID0gKHsgcmFkaXVzLCBzdHJva2VXaWR0aCB9KSA9PiAoXG4gIDxjaXJjbGVcbiAgICByPXtyYWRpdXN9XG4gICAgZmlsbD1cInJlZFwiXG4gICAgc3Ryb2tlPVwiYmxhY2tcIlxuICAgIHN0cm9rZS13aWR0aD17c3Ryb2tlV2lkdGh9XG4gIC8+XG4pOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBjb25zdCBFeWVzID0gKHtleWVPZmZzZXRYLCBleWVPZmZzZXRZLCBleWVSYWRpdXN9KSA9PiAoXG4gIDw+XG4gICAgPGNpcmNsZVxuICAgICAgY3g9ey1leWVPZmZzZXRYfVxuICAgICAgY3k9ey1leWVPZmZzZXRZfVxuICAgICAgcj17ZXllUmFkaXVzfVxuICAgIC8+XG4gICAgPGNpcmNsZVxuICAgICAgY3g9e2V5ZU9mZnNldFh9XG4gICAgICBjeT17LWV5ZU9mZnNldFl9XG4gICAgICByPXtleWVSYWRpdXN9XG4gICAgLz5cbiAgPC8+XG4pOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBhcmMgfSBmcm9tICdkMyc7XG5cbmV4cG9ydCBjb25zdCBNb3V0aCA9ICh7bW91dGhSYWRpdXMsIG1vdXRoV2lkdGh9KSA9PiB7XG4gIGNvbnN0IG1vdXRoQXJjID0gYXJjKClcbiAgICAuaW5uZXJSYWRpdXMobW91dGhSYWRpdXMpXG4gICAgLm91dGVyUmFkaXVzKG1vdXRoUmFkaXVzICsgbW91dGhXaWR0aClcbiAgICAuc3RhcnRBbmdsZShNYXRoLlBJIC8gMilcbiAgICAuZW5kQW5nbGUoTWF0aC5QSSAqIDMgLyAyKTtcbiAgXG4gIHJldHVybiA8cGF0aCBkPXttb3V0aEFyYygpfS8+O1xufTsiLCJleHBvcnQgY29uc3QgRmFjZUNvbnRhaW5lciA9ICh7IGNoaWxkcmVuLCB3aWR0aCwgaGVpZ2h0LCBjZW50ZXJYLCBjZW50ZXJZIH0pID0+IChcblx0PHN2ZyB3aWR0aD17d2lkdGh9IGhlaWdodD17aGVpZ2h0fT5cbiAgICA8ZyB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtjZW50ZXJYfSwke2NlbnRlcll9KWB9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvZz5cbiAgPC9zdmc+XG4pXG4iLCJpbXBvcnQgeyBCYWNrZ3JvdW5kQ2lyY2xlIH0gZnJvbSAnLi9CYWNrZ3JvdW5kQ2lyY2xlJztcbmltcG9ydCB7IEV5ZXMgfSBmcm9tICcuL0V5ZXMnO1xuaW1wb3J0IHsgTW91dGggfSBmcm9tICcuL01vdXRoJztcbmltcG9ydCB7IEZhY2VDb250YWluZXIgfSBmcm9tICcuL0ZhY2VDb250YWluZXInO1xuXG5leHBvcnQgY29uc3QgRmFjZSA9ICh7XG4gIFx0d2lkdGgsIFxuICBcdGhlaWdodCwgXG4gIFx0Y2VudGVyWCwgXG4gIFx0Y2VudGVyWSxcbiAgICByYWRpdXMsXG4gICAgc3Ryb2tlV2lkdGgsXG4gICAgZXllT2Zmc2V0WCxcbiAgICBleWVPZmZzZXRZLFxuICAgIGV5ZVJhZGl1cyxcbiAgICBtb3V0aFJhZGl1cyxcbiAgICBtb3V0aFdpZHRofSkgPT4gKFxuICBcbjxGYWNlQ29udGFpbmVyXG4gICAgd2lkdGg9e3dpZHRofVxuICAgIGhlaWdodD17aGVpZ2h0fVxuICAgIGNlbnRlclg9e2NlbnRlclh9XG4gICAgY2VudGVyWT17Y2VudGVyWX1cbiAgICA+XG4gIFxuICAgICAgPEJhY2tncm91bmRDaXJjbGVcbiAgICAgICAgcmFkaXVzPXtjZW50ZXJZIC0gc3Ryb2tlV2lkdGggLyAyfVxuICAgICAgICBzdHJva2VXaWR0aD17c3Ryb2tlV2lkdGh9XG4gICAgICAvPlxuICAgICAgPEV5ZXNcbiAgICAgICAgZXllT2Zmc2V0WD17ZXllT2Zmc2V0WH1cbiAgICAgICAgZXllT2Zmc2V0WT17ZXllT2Zmc2V0WX1cbiAgICAgICAgZXllUmFkaXVzPXtleWVSYWRpdXN9XG4gICAgICAvPlxuICAgICAgPE1vdXRoIFxuICAgICAgICBtb3V0aFJhZGl1cz17bW91dGhSYWRpdXN9IFxuICAgICAgICBtb3V0aFdpZHRoPXttb3V0aFdpZHRofSAvPlxuICBcbiAgPC9GYWNlQ29udGFpbmVyPlxuKTtcblxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHsgcmFuZ2UgfSBmcm9tICdkMyc7XG5cbmltcG9ydCB7IEZhY2UgfSBmcm9tICcuL0ZhY2UnO1xuXG5jb25zdCB3aWR0aCA9IDE2MDtcbmNvbnN0IGhlaWdodCA9IDE2MDtcblxuY29uc3QgYXJyYXkgPSByYW5nZSg2ICogMyk7XG5cbmNvbnN0IEFwcCA9ICgpID0+XG4gIGFycmF5Lm1hcCgoKSA9PiAoXG4gICAgPEZhY2VcbiAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgY2VudGVyWD17d2lkdGggLyAyfVxuICAgICAgY2VudGVyWT17aGVpZ2h0IC8gMn1cbiAgICAgIHN0cm9rZVdpZHRoPXs2ICsgTWF0aC5yYW5kb20oKSAqIDN9XG4gICAgICBleWVPZmZzZXRYPXsyMCArIE1hdGgucmFuZG9tKCkgKiA5fVxuICAgICAgZXllT2Zmc2V0WT17MjAgKyBNYXRoLnJhbmRvbSgpICogMTV9XG4gICAgICBleWVSYWRpdXM9ezUgKyBNYXRoLnJhbmRvbSgpICogMTB9XG4gICAgICBtb3V0aFdpZHRoPXs3ICsgTWF0aC5yYW5kb20oKSAqIDl9XG4gICAgICBtb3V0aFJhZGl1cz17MzAgKyBNYXRoLnJhbmRvbSgpICogMTB9XG4gICAgLz5cbiAgKSk7XG5cbmNvbnN0IHJvb3RFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKTtcblJlYWN0RE9NLnJlbmRlcig8QXBwIC8+LCByb290RWxlbWVudCk7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJhcmMiLCJyYW5nZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0VBRU8sTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRTtFQUN4RCxFQUFFQTtFQUNGLElBQUksR0FBRyxNQUFPLEVBQ1YsTUFBSyxLQUFLLEVBQ1YsUUFBTyxPQUFPLEVBQ2QsZ0JBQWMsYUFBWSxDQUMxQjtFQUNKLENBQUM7O0VDUE0sTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRSxVQUFVLEVBQUUsU0FBUyxDQUFDO0VBQ3hELEVBQUVBO0VBQ0YsSUFBSUE7RUFDSixNQUFNLElBQUksQ0FBQyxVQUFXLEVBQ2hCLElBQUksQ0FBQyxVQUFXLEVBQ2hCLEdBQUcsV0FBVTtFQUVuQixJQUFJQTtFQUNKLE1BQU0sSUFBSSxVQUFXLEVBQ2YsSUFBSSxDQUFDLFVBQVcsRUFDaEIsR0FBRyxXQUFVLENBQ2I7RUFDTixHQUFLO0VBQ0wsQ0FBQzs7RUNaTSxNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQyxLQUFLO0VBQ3BELEVBQUUsTUFBTSxRQUFRLEdBQUdDLE1BQUcsRUFBRTtFQUN4QixLQUFLLFdBQVcsQ0FBQyxXQUFXLENBQUM7RUFDN0IsS0FBSyxXQUFXLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztFQUMxQyxLQUFLLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztFQUM1QixLQUFLLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztFQUMvQjtFQUNBLEVBQUUsT0FBT0QsaUNBQU0sR0FBRyxRQUFRLElBQUcsQ0FBRSxDQUFDO0VBQ2hDLENBQUM7O0VDWE0sTUFBTSxhQUFhLEdBQUcsQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUU7RUFDM0UsQ0FBQyw4QkFBSyxPQUFPLEtBQU0sRUFBQyxRQUFRO0VBQzVCLElBQUksNEJBQUcsV0FBVyxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0VBQ25ELE1BQU8sUUFBUztFQUNoQixLQUFRO0VBQ1IsR0FBUTtFQUNSOztFQ0RPLE1BQU0sSUFBSSxHQUFHLENBQUM7RUFDckIsR0FBRyxLQUFLO0VBQ1IsR0FBRyxNQUFNO0VBQ1QsR0FBRyxPQUFPO0VBQ1YsR0FBRyxPQUFPO0VBQ1YsSUFBSSxNQUFNO0VBQ1YsSUFBSSxXQUFXO0VBQ2YsSUFBSSxVQUFVO0VBQ2QsSUFBSSxVQUFVO0VBQ2QsSUFBSSxTQUFTO0VBQ2IsSUFBSSxXQUFXO0VBQ2YsSUFBSSxVQUFVLENBQUM7RUFDZjtFQUNBLHFCQUFDO0VBQ0QsSUFBSSxPQUFPLEtBQU0sRUFDYixRQUFRLE1BQU8sRUFDZixTQUFTLE9BQVEsRUFDakIsU0FBUztFQUViO0VBQ0EsTUFBTSxxQkFBQztFQUNQLFFBQVEsUUFBUSxPQUFPLEdBQUcsV0FBVyxHQUFHLENBQUUsRUFDbEMsYUFBYSxhQUFZO0VBRWpDLE1BQU0scUJBQUM7RUFDUCxRQUFRLFlBQVksVUFBVyxFQUN2QixZQUFZLFVBQVcsRUFDdkIsV0FBVyxXQUFVO0VBRTdCLE1BQU0scUJBQUM7RUFDUCxRQUFRLGFBQWEsV0FBWSxFQUN6QixZQUFZLFlBQVcsQ0FBRztFQUNsQztFQUNBLEdBQWtCO0VBQ2xCLENBQUM7O0VDakNELE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQztFQUNsQixNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUM7QUFDbkI7RUFDQSxNQUFNLEtBQUssR0FBR0UsUUFBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQUMzQjtFQUNBLE1BQU0sR0FBRyxHQUFHO0VBQ1osRUFBRSxLQUFLLENBQUMsR0FBRyxDQUFDO0VBQ1osSUFBSUYsdUJBQUM7RUFDTCxNQUFNLE9BQU8sS0FBTSxFQUNiLFFBQVEsTUFBTyxFQUNmLFNBQVMsS0FBSyxHQUFHLENBQUUsRUFDbkIsU0FBUyxNQUFNLEdBQUcsQ0FBRSxFQUNwQixhQUFhLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBRSxFQUNuQyxZQUFZLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBRSxFQUNuQyxZQUFZLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRyxFQUNwQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsRUFBRyxFQUNsQyxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBRSxFQUNsQyxhQUFhLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBRyxDQUNyQztFQUNOLEdBQUcsQ0FBQyxDQUFDO0FBQ0w7RUFDQSxNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0VBQ3BELFFBQVEsQ0FBQyxNQUFNLENBQUNBLHVCQUFDLFNBQUcsRUFBRyxFQUFFLFdBQVcsQ0FBQzs7OzsifQ==
